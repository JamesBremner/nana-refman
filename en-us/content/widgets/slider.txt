|name	=nana::slider
|header	=<nana/gui/widgets/slider.hpp>
|decl	=#class slider;#
:The slider widget is to let user move the slide block to handle the change of value.

==base==
[[widget_object<category::widget_tag>]//./widgets/widget_object_widget_tag.htm] : public [[widget]]

==events==
[[general events]//./core/events.htm]
#value_changed(const [[arg_slider]]&)#
:occurs when the value of slider is changed.


==member types==
[[renderer_interface]/widgets/slider-renderer_interface]
:the interface for customized renderer
seekdir
:defines the slider seek direction

==scheme==
color_adorn
:color of adorn
color_bar
:color of bar
color_slider
:color of slider
color_slider_highlighted
:slider's highlighted color
color_vernier
:background color of vernier
color_vernier_text
:text color of vernier
vernier_text_margin
:margin of vernier text

==member functions==
constructors
:constructs a slider widget instance
decl=#slider();#
decl=#slider(window handle, bool visible);#
decl=#slider(window handle, const rectangle& rect = {}, bool visible = true);#
:Constructs a slider widget instance.
:  0) The default constructor. It constructs the class object, but it doesn't create UI widget.
:  1,2) Constructs the class object and creates slider UI widget.
--parameters--
handle
:a handle to the parent window of the slider being created
rect
:the position and dimension of the slider, the coordinate is relative to the upper-left corner of the parent window
visible
:indicates whether to show or hide the slider widget
--end--

adorn
:temporary value when mouse moves
decl=#unsigned adorn() const;#
:Temporary value when mouse moves over the slider.
--returns--
:Value of the mouse points to.
--end--

maximum
:maximum value
decl=#void maximum(unsigned maxvalue);#
decl=#unsigned maximum() const;#
:The maximum value which the slider represents.
:  0) Sets the maximum value.
:  1) Returns the maximum value.
--parameters--
maxvalue
:the maximum value
--returns--
:1) The maximum value.
--end--

move_step
:increase or decrease the value of slider
decl=#unsigned move_step(bool forward);#
:Increase or decrease the value of slider.
--parameters--
forward
:indicates whether to increase or decrease. If this parameter is #true#, it increases the value of slider. If the parameter is #false#, it decreases the value of slider.
--returns--
:The value of slider before increasing or decreasing.
--end--

renderer
:access the renderer
decl=#const pat::cloneable<[[renderer_interface]/widgets/slider-renderer_interface]>& renderer();#
decl=#void renderer(const pat::cloneable<[[renderer_interface]/widgets/slider-renderer_interface]>& other);#
:Access the renderer
:  0) Returns the reference to the current renderer.
:  1) Sets a new renderer.
--parameters--
other
:a new renderer
--returns--
:A reference of the current renderer.
--end--

seek
:sets the seek direction
decl=#void seek(seekdir direction);#
:Defines the direction that reaction of slider when a user moves the mouse over the slider.
--parameters--
direction
:the seek direction
--end--

transparent
:transprent background
decl=#void transparent(bool enable);#
decl=#bool transparent() const;#
:Transparent background
:  0) Enables/disables the transparent background.
:  1) Determines whether the background is transparent.
--parameters--
enable
:indicates whether to enable or disable the transparent background. If this parameter is #true#, it enables the transparent background. If the parameter is #false#, it disables the transparent background
--returns--
:1) #true# if the background is transparent, #false# otherwise.
--end--

value
:value of slider
decl=#void value(unsigned val);#
decl=#unsigned value() const;#
:The value of slider, which the slider represents.
:  0) Sets the value.
:  1) Returns the value.
--parameters--
val
:the new value of the slider
--returns--
:1) The value of the slider.
--end--

vernier[#1.4]
:vernier text provider
decl=#void vernier(std::function<std::string(unsigned maximum, unsigned cursor_value)> provider);#
:Sets a provider of vernier text. The provider generates a text that used to display a tip label when user moves the mouse on the slider.
--parameters--
provider
:a function that generates a text, its paremeters maximum and cursor_value are passed by the slider. It must return a UTF-8 string.
--end--

vertical
:enables/disables a vertical slider
decl=#void vertical(bool vert);#
decl=#bool vertical() const;#
:Vertical slider
:  0) Enables/disables a vertical slider.
:  1) Determines whether a slider is vertical.
--parameters--
vert
:indicates whether to enable or disable a vertical slider
--returns--
:1) #true# if the slider is vertical, #false# otherwise.
--end--

==remark==
:The method vernier() is to provides a text to display a tip label when user moves the mouse on the slider. The following example shows to a percent of mouse position.
```
slider.scheme().margin_vernier_text = 0; //Modify the margin of the tip label
slider.vernier([](unsigned maximum, unsigned cursor_value)
{
    return std::to_string(cursor_value * 100 / maximum) + "%"; //It should return a UTF-8 string.
});
```

==see also==
[[arg_slider]]
[[renderer_interface]/widgets/slider-renderer_interface]
--end--
