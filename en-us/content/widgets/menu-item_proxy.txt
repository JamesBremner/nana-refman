|name	=nana::menu::item_proxy
|header	=<nana/gui/widgets/menu.hpp>
|decl	=#class menu::item_proxy;#
:The #class item_proxy# is a manipulator of the menu items. If insertion or deletion occurs before current item, the item_proxy is invalidated.

==member functions==
index
:gets the position of item
decl=#std::size_t index() const;#
--returns--
:The position of the item.
--end--

---Modifiers---
check_style
:sets check style
decl=#void check_style(std::size_t pos, checks style);#
:Sets the check style for an item.
: a), option is to group the contiguous items whose check styles are option. When an item in a group is selected, other items in the group automatically are unselected.
: b), hightlight is to enable the item to be selectable.
--parameters--
pos
:position to the requested item
style
:check style
--except--
std::out_of_range
:if position is invalid.
--end--

checked
:checks/unchecks current item
decl=#item_proxy& checked(bool chk);#
decl=#bool checked(std::size_t pos) const;#
:Changes/determines the status of check.
:  0), Checks/unchecks a specified item.
:  1), Determines whether an item is checked.
:The check behaves differently depending on check_style.
--parameters--
chk
:indicates whether to check or uncheck the item
--except--
std::out_of_range
:if the position is invalid.
--returns--
:0), A reference to itself.
:1), Returns #true# if the item is checked, #false# otherwise.
--end--

enabled
:enables/disables current item
decl=#item_proxy& enabled(bool enable);#
decl=#bool enabled() const;#
:Enables/disables the item to react the user keyboard and mouse input.
:  0), Enables/disables the current item.
:  1), Determines whether the item is enabled.
--parameters--
enable
:indicates whether to enable or disable the item. If this parameter is #true#, the item is enabled. If the parameter is #false#, the item is disabled.
--except--
std::out_of_range
:if the position is invalid.
--returns--
:0), A reference to itself.
:1), #true# if the item is enabled, #false# otherwise.
--end--

text[#1.5.1]
:changes title of an item
decl=#void text(std::string title);#[#1.5]
decl=#std::string text() const;#[#1.5.1]
--parameters--
pos
:position to the requested item.
title
:title of the item, in UTF-8 encoded.
--except--
std::out_of_range
:if the position is invalid.
--returns--
:text of the specified item.
--end--



